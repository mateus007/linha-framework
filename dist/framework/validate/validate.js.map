{"version":3,"file":"validate.js.map","sources":["../../../src/framework/validate/validate.ts"],"sourcesContent":["type FormElement = HTMLFormElement | HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\nvar Validate = {\n\n    /**\n     * Validate defaults\n     * @var {Object}\n     */\n    defaults: {\n        invalidMessage: 'Invalid field value.',\n        afterValidate: null,\n        beforeValidate: null,\n        onValid: null,\n        onInvalid: null,\n    },\n\n    /**\n     * Custom handler options\n     * @var {Array}\n     */\n    handlers: [],\n\n    /**\n     * Init validate\n     * @return {void}\n     */\n    init: function(): void{\n\n        var self = this;\n\n        document.addEventListener('submit', function(e){\n            var form = (<FormElement>e.target).closest('form');\n            if( !self.validate(form) ){\n                e.preventDefault();\n                e.stopPropagation();\n            };\n        });\n\n        document.addEventListener('change', function(e){\n            self.validate(e.target);\n        });\n\n    },\n\n    /**\n     * Attach validation to form or field element by its selector\n     * @param {String} selector\n     * @param {Object} options\n     * @return {void}\n     */\n    attach: function(selector: string, options: object): void{\n        this.handlers.push({\n            selector: selector,\n            options: options\n        });\n    },\n\n    /**\n     * Retrieve validate options for given element\n     * @param {FormElement} element\n     * @param {Object} append\n     * @return {Object}\n     */\n    options: function(element: FormElement, append: object): object{\n\n        var options = Object.assign(\n            {},\n            this.defaults,\n            (append || {})\n        );\n\n        this.handlers.map(function(handler: { selector: string; options: object; }){\n            if( element.matches(handler.selector) ){\n                Object.assign(options, handler.options);\n            }\n        });\n\n        return options;\n    },\n\n    /**\n     * Check the validity of an element\n     * @param {FormElement} element\n     * @return {Boolean}\n     */\n    check: function(element: FormElement): boolean{\n\n        // Form\n        if( element.nodeName === 'FORM' ){\n\n            var items = Array.from(element.querySelectorAll('[required]'));\n            var self = this;\n\n            return items.filter(function(field){\n                return !self.validate(field);\n            }).length === 0;\n        }\n\n        // Fields\n        if( element.disabled ){\n            return true;\n        }\n\n        if( !element.required ){\n            return true;\n        }\n\n        var value = element.value;\n        var type = element.getAttribute('type');\n\n        // Selects\n        if( element.nodeName === 'SELECT' ){\n            return ( value !== '' ) ? true : false;\n        }\n\n        // CheckBox / Radio\n        if( type == 'checkbox' || type == 'radio' ){\n\n            var name = element.getAttribute('name');\n            var selector = 'input[name=\"' + name + '\"]:checked';\n            var checked = document.querySelectorAll(selector).length;\n\n            return (checked == 0) ? false : true;\n        }\n\n        // Reset current validation\n        element.setCustomValidity('');\n\n        // Others\n        return value !== '' && element.checkValidity();\n    },\n\n    /**\n     * Decorate element based on validity\n     * @param {FormElement} element\n     * @param {Boolean} valid\n     * @param {Object} options\n     * @return {void}\n     */\n    decorate: function(element: FormElement, valid: boolean, options: { invalidMessage: string }): void{\n\n        var type = element.getAttribute('type');\n        var parent = element.closest('.select, label');\n        var elements = [element, parent];\n\n        if( type && (type == 'checkbox' || type == 'radio' ) ){\n\n            var name = element.getAttribute('name');\n            var selector = 'input[name=\"' + name + '\"]';\n            var items = document.querySelectorAll(selector);\n\n            items.forEach(function(item){\n                elements.push(item, item.closest('.select, label'));\n            });\n\n        }\n\n        elements = elements.filter(Boolean);\n        elements = Array.from( new Set(elements) );\n        elements.map(function(item){\n\n            if( (item as FormElement).setCustomValidity ){\n                (item as FormElement).setCustomValidity(\n                    ( valid ) ? '' : options.invalidMessage\n                );\n            }\n\n            item.classList.add( ( valid ) ? 'valid' : 'invalid');\n            item.classList.remove( ( valid ) ? 'invalid' : 'valid');\n\n        });\n\n    },\n\n    /**\n     * Validate element with the options\n     * @param {FormElement} element\n     * @param {Object} options\n     * @return {Boolean}\n     */\n    validate: function(element: FormElement, options: object): boolean{\n\n        var _options = this.options(element, options);\n\n        var runCallback = function(callback: Function){\n            if( typeof callback == 'function' ){\n                callback.apply(element, new Array(element, _options));\n            }\n        }\n\n        runCallback(_options.beforeValidate);\n\n        var valid = this.check(element);\n\n        this.decorate(element, valid, _options);\n\n        if( valid ){\n            runCallback(_options.onValid);\n        }else{\n            runCallback(_options.onInvalid);\n        }\n\n        runCallback(_options.afterValidate);\n\n        return valid;\n    },\n\n    /**\n     * Validate the form\n     * @param {FormElement} form\n     * @param {Object} options\n     * @return {Boolean}\n     */\n    form: function(form: FormElement, options: object): boolean{\n        return this.validate(form, options);\n    },\n\n    /**\n     * Validate an field\n     * @param {FormElement} field\n     * @param {Object} options\n     * @return {Boolean}\n     */\n    field: function(field: FormElement, options: object): boolean{\n        return this.validate(field, options);\n    }\n\n};\n\nValidate.init();"],"names":["Validate","defaults","invalidMessage","afterValidate","beforeValidate","onValid","onInvalid","handlers","init","self","this","document","addEventListener","e","form","target","closest","validate","preventDefault","stopPropagation","attach","selector","options","push","element","append","Object","assign","map","handler","matches","check","nodeName","items","Array","from","querySelectorAll","filter","field","length","disabled","required","value","type","getAttribute","setCustomValidity","checkValidity","name","decorate","valid","parent","elements","forEach","item","Boolean","Set","classList","add","remove","runCallback","callback","apply","_options"],"mappings":"AAEA,IAAIA,SAAW,CAMXC,SAAU,CACNC,eAAgB,uBAChBC,cAAe,KACfC,eAAgB,KAChBC,QAAS,KACTC,UAAW,MAOfC,SAAU,GAMVC,KAAM,WAEF,IAAIC,KAAOC,KAEXC,SAASC,iBAAiB,SAAU,SAASC,GACzC,IAAIC,KAAqBD,EAAEE,OAAQC,QAAQ,QACtCP,KAAKQ,SAASH,QACfD,EAAEK,iBACFL,EAAEM,qBAIVR,SAASC,iBAAiB,SAAU,SAASC,GACzCJ,KAAKQ,SAASJ,EAAEE,WAWxBK,OAAQ,SAASC,SAAkBC,SAC/BZ,KAAKH,SAASgB,KAAK,CACfF,SAAUA,SACVC,QAASA,WAUjBA,QAAS,SAASE,QAAsBC,QAEpC,IAAIH,QAAUI,OAAOC,OACjB,GACAjB,KAAKT,SACJwB,QAAU,IASf,OANAf,KAAKH,SAASqB,IAAI,SAASC,SACnBL,QAAQM,QAAQD,QAAQR,WACxBK,OAAOC,OAAOL,QAASO,QAAQP,WAIhCA,SAQXS,MAAO,SAASP,MAGZ,GAAyB,SAArBA,KAAQQ,SAAqB,CAE7B,IAAIC,KAAQC,MAAMC,KAAKX,KAAQY,iBAAiB,eAC5C3B,KAAOC,KAEX,OAEc,IAFPuB,KAAMI,OAAO,SAASC,OACzB,OAAQ7B,KAAKQ,SAASqB,SACvBC,OAIP,GAAIf,KAAQgB,SACR,OAAO,EAGX,IAAKhB,KAAQiB,SACT,OAAO,EAGX,IAAIC,MAAQlB,KAAQkB,MAChBC,KAAOnB,KAAQoB,aAAa,QAGhC,GAAyB,WAArBpB,KAAQQ,SACR,MAAmB,KAAVU,MAIb,GAAY,YAARC,MAA8B,SAARA,KAa1B,OAHAnB,KAAQqB,kBAAkB,IAGT,KAAVH,OAAgBlB,KAAQsB,gBAXvBC,KAAOvB,KAAQoB,aAAa,QAIhC,OAAmB,GAFLjC,SAASyB,iBADR,eAAiBW,KAAO,cACWR,QAmB1DS,SAAU,SAASxB,KAAsByB,MAAgB3B,SAErD,IAAIqB,KAAOnB,KAAQoB,aAAa,QAC5BM,OAAS1B,KAAQR,QAAQ,kBACzBmC,SAAW,CAAC3B,KAAS0B,SAErBP,MAAiB,YAARA,MAA8B,SAARA,OAE3BI,KAAOvB,KAAQoB,aAAa,QAEpBjC,SAASyB,iBADN,eAAiBW,KAAO,MAGjCK,QAAQ,SAASC,MACnBF,SAAS5B,KAAK8B,KAAMA,KAAKrC,QAAQ,sBAKzCmC,SAAWA,SAASd,OAAOiB,UAC3BH,SAAWjB,MAAMC,KAAM,IAAIoB,IAAIJ,YACtBvB,IAAI,SAASyB,MAEbA,KAAqBR,mBACrBQ,KAAqBR,kBAClB,MAAY,GAAKvB,QAAQpB,gBAIjCmD,KAAKG,UAAUC,IAAK,MAAY,QAAU,WAC1CJ,KAAKG,UAAUE,OAAQ,MAAY,UAAY,YAYvDzC,SAAU,SAASO,QAAsBF,OAInB,SAAdqC,YAAuBC,UACA,mBAAZA,UACPA,SAASC,MAAMrC,QAAS,IAAIU,MAAMV,QAASsC,WAJnD,IAAIA,SAAWpD,KAAKY,QAAQE,QAASF,OAQrCqC,YAAYG,SAAS1D,gBAEjB6C,MAAQvC,KAAKqB,MAAMP,SAYvB,OAVAd,KAAKsC,SAASxB,QAASyB,MAAOa,UAG1BH,YADAV,MACYa,SAASzD,QAETyD,SAASxD,WAGzBqD,YAAYG,SAAS3D,eAEd8C,OASXnC,KAAM,SAASA,KAAmBQ,SAC9B,OAAOZ,KAAKO,SAASH,KAAMQ,UAS/BgB,MAAO,SAASA,MAAoBhB,SAChC,OAAOZ,KAAKO,SAASqB,MAAOhB,WAKpCtB,SAASQ"}