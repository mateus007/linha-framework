{"version":3,"file":"lazy.js.map","sources":["../../../src/framework/lazy/lazy.ts"],"sourcesContent":["/**\n * Cross-browser lazy loading library compatible with \"loading\" attribute.\n *\n * Simple image:\n * <img loading=\"lazy\" data-src=\"\" src=\"\" ... />\n *\n * With picture:\n * <picture>\n *    <source data-srcset=\"\" .../>\n *    <img loading=\"lazy\" data-src=\"\" src=\"\" ... />\n * </picture>\n */\nvar Lazy = {\n\n    /**\n     * Active flag\n     * @var {boolean}\n     */\n    active: false,\n\n    /**\n     * Init carousel\n     * @return {void}\n     */\n    init: function(): void {\n\n        var self = this;\n        var elements = Array.from( document.querySelectorAll('[loading]') );\n\n        /**\n         * Process and load elements\n         * @return {void}\n         */\n        function processElements(): void{\n\n            if( elements.length === 0 ){\n                return;\n            }\n\n            elements.forEach(function(element){\n                if( self.isInViewport(element) ){\n\n                    self.loadElement(element as HTMLImageElement);\n                    elements = elements.filter(function(theElement) {\n                        return element !== theElement;\n                    });\n\n                }\n            });\n\n        }\n\n        /**\n         * Lazy load elements\n         * @return {void}\n         */\n        function runLoad(): void{\n\n            if( self.active ){\n                return;\n            }\n\n            self.active = true;\n            window.setTimeout(function(){\n\n                processElements();\n\n                if( elements.length === 0 ){\n                    document.removeEventListener('scroll', runLoad);\n                    window.removeEventListener('resize', runLoad);\n                    window.removeEventListener('orientationchange', runLoad);\n                }\n\n                self.active = false;\n\n            }, 200);\n\n        }\n\n        if( 'loading' in HTMLImageElement.prototype ){\n            (elements as HTMLImageElement[]).forEach(function(element){\n                self.loadElement(element);\n            });\n        }else{\n            document.addEventListener('scroll', runLoad);\n            window.addEventListener('resize', runLoad);\n            window.addEventListener('orientationchange', runLoad);\n            runLoad();\n        }\n\n    },\n\n    /**\n     * Update element attributes\n     * @param {Element} element\n     * @return {void}\n     */\n    updateElement: function(element: HTMLImageElement | HTMLSourceElement): void{\n\n        if( element.dataset.src ){\n            element.src = element.dataset.src;\n        }\n        if( element.dataset.srcset ){\n            element.srcset = element.dataset.srcset;\n        }\n        if( element.dataset.sizes ){\n            element.sizes = element.dataset.sizes;\n        }\n\n        element.classList.remove('lazy');\n\n    },\n\n    /**\n     * Load element\n     * @param {Element} element\n     * @return {void}\n     */\n    loadElement: function(element: HTMLImageElement): void{\n\n        var self = this;\n            self.updateElement(element);\n\n        // Process sibling <source/> element\n        var child = element.parentElement.querySelectorAll('source');\n            child = [].slice.call(child);\n\n        if( !child.length ){\n            return;\n        }\n\n        child.forEach(function(childElement){\n            self.updateElement(childElement);\n        });\n\n    },\n\n    /**\n     * Return if element is in viewport\n     * @param {Element} element\n     * @return {Boolean}\n     */\n    isInViewport: function(element: Element): boolean{\n        return ( element.getBoundingClientRect().top <= window.innerHeight\n                && element.getBoundingClientRect().bottom >= 0 )\n                && getComputedStyle(element).display !== 'none';\n    }\n\n};\n\ndocument.addEventListener('DOMContentLoaded', function(){\n    Lazy.init();\n});"],"names":["Lazy","active","init","self","this","elements","Array","from","document","querySelectorAll","runLoad","window","setTimeout","length","forEach","element","isInViewport","loadElement","filter","theElement","removeEventListener","HTMLImageElement","prototype","addEventListener","updateElement","dataset","src","srcset","sizes","classList","remove","child","parentElement","slice","call","childElement","getBoundingClientRect","top","innerHeight","bottom","getComputedStyle","display"],"mappings":"AAYA,IAAIA,KAAO,CAMPC,QAAQ,EAMRC,KAAM,WAEF,IAAIC,KAAOC,KACPC,SAAWC,MAAMC,KAAMC,SAASC,iBAAiB,cA6BrD,SAASC,UAEDP,KAAKF,SAITE,KAAKF,QAAS,EACdU,OAAOC,WAAW,WA5BM,IAApBP,SAASQ,QAIbR,SAASS,QAAQ,SAASC,SAClBZ,KAAKa,aAAaD,WAElBZ,KAAKc,YAAYF,SACjBV,SAAWA,SAASa,OAAO,SAASC,YAChC,OAAOJ,UAAYI,gBAuBH,IAApBd,SAASQ,SACTL,SAASY,oBAAoB,SAAUV,SACvCC,OAAOS,oBAAoB,SAAUV,SACrCC,OAAOS,oBAAoB,oBAAqBV,UAGpDP,KAAKF,QAAS,GAEf,MAIH,YAAaoB,iBAAiBC,UAC7BjB,SAAgCS,QAAQ,SAASC,SAC9CZ,KAAKc,YAAYF,YAGrBP,SAASe,iBAAiB,SAAUb,SACpCC,OAAOY,iBAAiB,SAAUb,SAClCC,OAAOY,iBAAiB,oBAAqBb,SAC7CA,YAURc,cAAe,SAAST,SAEhBA,QAAQU,QAAQC,MAChBX,QAAQW,IAAMX,QAAQU,QAAQC,KAE9BX,QAAQU,QAAQE,SAChBZ,QAAQY,OAASZ,QAAQU,QAAQE,QAEjCZ,QAAQU,QAAQG,QAChBb,QAAQa,MAAQb,QAAQU,QAAQG,OAGpCb,QAAQc,UAAUC,OAAO,SAS7Bb,YAAa,SAASF,OAElB,IAAIZ,KAAOC,KACPD,KAAKqB,cAAcT,OAGnBgB,MAAQhB,MAAQiB,cAAcvB,iBAAiB,WAC/CsB,MAAQ,GAAGE,MAAMC,KAAKH,QAEflB,QAIXkB,MAAMjB,QAAQ,SAASqB,cACnBhC,KAAKqB,cAAcW,iBAU3BnB,aAAc,SAASD,SACnB,OAASA,QAAQqB,wBAAwBC,KAAO1B,OAAO2B,aACF,GAA1CvB,QAAQqB,wBAAwBG,QACM,SAAtCC,iBAAiBzB,SAAS0B,UAK7CjC,SAASe,iBAAiB,mBAAoB,WAC1CvB,KAAKE"}